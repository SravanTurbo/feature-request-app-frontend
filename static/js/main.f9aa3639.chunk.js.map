{"version":3,"sources":["components/FeatureModal.js","components/ClientModal.js","components/ProductModal.js","actions.js","App.js","serviceWorker.js","index.js"],"names":["CustomModal","props","validateInput","inputItem","title","client","client_priority","target_date","product_area","onSave","setState","isError","handleChange","e","target","name","value","activeItem","state","this","toggle","clientList","productList","cList","length","map","item","i","key","id","pList","Modal","isOpen","ModalHeader","ModalBody","Form","FormGroup","Label","for","Input","invalid","type","onChange","placeholder","description","ModalFooter","Button","color","onClick","Component","BASE_URL","handleSubmit","tab","a","path","axios","put","res","post","handleDelete","delete","refreshList","result","get","res1","res2","res3","push","App","componentDidMount","console","log","requestList","data","modal","handleToggle","activeTab","context","createItem","editItem","submitHere","deleteHere","renderItems","itemList","content","scope","className","viewCompleted","header","Nav","tabs","NavItem","NavLink","classnames","active","Table","hover","client_name","product_name","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f9aa3639.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Input,\n  Label\n} from \"reactstrap\";\n\nexport default class CustomModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isError: false,\n      activeItem: this.props.activeItem,\n    };\n  }\n\n  validateInput = inputItem =>{\n    if(inputItem.title==='' || inputItem.client==='' || inputItem.client_priority===''\n    || inputItem.target_date==='' || inputItem.product_area==='' ){\n      this.setState({isError:true})\n      return\n    }\n    this.props.onSave(inputItem)\n  }\n\n  handleChange = e => {\n    let { name, value } = e.target;\n    const activeItem = { ...this.state.activeItem, [name]: value };\n    this.setState({ activeItem });\n  };\n  render() {\n    const { toggle, clientList, productList } = this.props;\n\n    let cList = clientList.length > 0\n    && clientList.map((item, i) => {\n\t\treturn (\n\t\t\t<option key={i} value={item.id}>{item.name}</option>\n\t\t)}, this);\n\n    let pList = productList.length > 0\n    && productList.map((item, i) => {\n\t\treturn (\n\t\t\t<option key={i} value={item.id}>{item.name}</option>\n\t\t)}, this);\n    return (\n\n      <Modal isOpen={true} toggle={toggle}>\n        <ModalHeader toggle={toggle}> Feature Request </ModalHeader>\n        <ModalBody>\n          <Form>\n            <FormGroup>\n              <Label for=\"title\">Title</Label>\n              <Input\n                invalid = {this.state.isError}\n                type=\"text\"\n                name=\"title\"\n                value={this.state.activeItem.title}\n                onChange={this.handleChange}\n                placeholder=\"Enter Feature Title\"\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"description\">Description</Label>\n              <Input\n                type=\"text\"\n                name=\"description\"\n                value={this.state.activeItem.description}\n                onChange={this.handleChange}\n                placeholder=\"Enter Feature description\"\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"client\">Client</Label>\n              <Input\n                invalid = {this.state.isError}\n                type=\"select\"\n                name=\"client\"\n                value={this.state.activeItem.client}\n                onChange={this.handleChange}\n                placeholder=\"Select a Client\"\n              >\n              {cList}\n              </Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"client_priority\">Client Priority</Label>\n              <Input\n                invalid = {this.state.isError}\n                type=\"text\"\n                name=\"client_priority\"\n                value={this.state.activeItem.client_priority}\n                onChange={this.handleChange}\n                placeholder=\"Set a number\"\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"target_date\">Target Date</Label>\n              <Input\n                invalid = {this.state.isError}\n                type=\"date\"\n                name=\"target_date\"\n                value={this.state.activeItem.target_date}\n                onChange={this.handleChange}\n                placeholder=\"Enter Feature description\"\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"product_area\">Product Area</Label>\n              <Input\n                invalid = {this.state.isError}\n                type=\"select\"\n                name=\"product_area\"\n                value={this.state.activeItem.product_area}\n                onChange={this.handleChange}\n                placeholder=\"Enter Feature description\"\n              >\n              {pList}\n              </Input>\n            </FormGroup>\n          </Form>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"success\" onClick={() => this.validateInput(this.state.activeItem)}>\n            Save\n          </Button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Input,\n  Label\n} from \"reactstrap\";\n\nexport default class CustomModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isError: false,\n      activeItem: this.props.activeItem ? this.props.activeItem : {}\n    };\n  }\n  validateInput = inputItem =>{\n    if(inputItem.name===''){\n      this.setState({isError:true})\n      return\n    }\n    this.props.onSave(inputItem)\n  }\n\n\n  handleChange = e => {\n    let { name, value } = e.target;\n    const activeItem = { ...this.state.activeItem, [name]: value };\n    this.setState({ activeItem });\n  };\n  render() {\n    const { toggle } = this.props;\n    return (\n      <Modal isOpen={true} toggle={toggle}>\n        <ModalHeader toggle={toggle}> Add Client </ModalHeader>\n        <ModalBody>\n          <Form>\n            <FormGroup>\n              <Label for=\"title\">Client Name</Label>\n              <Input\n                invalid = {this.state.isError}\n                type=\"text\"\n                name=\"name\"\n                value={this.state.activeItem.name}\n                onChange={this.handleChange}\n                placeholder=\"Enter Client Name\"\n              />\n            </FormGroup>\n          </Form>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"success\" onClick={() => this.validateInput(this.state.activeItem)}>\n            Save\n          </Button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Input,\n  Label\n} from \"reactstrap\";\n\nexport default class CustomModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isError: false,\n      activeItem: this.props.activeItem ? this.props.activeItem : {}\n    };\n  }\n  validateInput = inputItem =>{\n    if(inputItem.name===''){\n      this.setState({isError:true})\n      return\n    }\n    this.props.onSave(inputItem)\n  }\n\n  handleChange = e => {\n    let { name, value } = e.target;\n    const activeItem = { ...this.state.activeItem, [name]: value };\n    this.setState({ activeItem });\n  };\n  render() {\n    const { toggle, onSave } = this.props;\n    return (\n      <Modal isOpen={true} toggle={toggle}>\n        <ModalHeader toggle={toggle}> Add Client </ModalHeader>\n        <ModalBody>\n          <Form>\n            <FormGroup>\n              <Label for=\"title\">Product Name</Label>\n              <Input\n                invalid = {this.state.isError}\n                type=\"text\"\n                name=\"name\"\n                value={this.state.activeItem.name}\n                onChange={this.handleChange}\n                placeholder=\"Enter Product Area Name\"\n              />\n            </FormGroup>\n          </Form>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"success\" onClick={() => this.validateInput(this.state.activeItem)}>\n            Save\n          </Button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n","import axios from 'axios'\n\nlet BASE_URL = 'https://hidden-brushlands-93268.herokuapp.com'\n\nexport const handleSubmit = async(item, tab) => {\n  let path = tab === '1' ? 'feature-request' : tab === '2' ? 'client' : 'product-area'\n  if (item.id) {\n    let res = await axios.put(`${BASE_URL}/api/${path}/${item.id}/`, item)\n    return res\n  }\n  let res = await axios.post(`${BASE_URL}/api/${path}/`, item)\n  return res\n};\n\nexport const handleDelete = async (item, tab) => {\n  let path = tab === '1' ? 'feature-request' : tab === '2' ? 'client' : 'product-area'\n  await axios.delete(`${BASE_URL}/api/${path}/${item.id}`)\n};\n\nexport const refreshList = async () => {\n  let result = []\n  let res1 = await axios.get(`${BASE_URL}/api/feature-request/`)\n  let res2 = await axios.get(`${BASE_URL}/api/client/`)\n  let res3 = await axios.get(`${BASE_URL}/api/product-area/`)\n  result.push(res1,res2,res3)\n  return result\n};\n","\n    import React, { Component } from \"react\";\n    import FeatureModal from \"./components/FeatureModal\";\n    import ClientModal from \"./components/ClientModal\";\n    import ProductModal from \"./components/ProductModal\";\n    import { Nav, NavItem, NavLink, Table } from 'reactstrap';\n    import classnames from 'classnames';\n    import {handleDelete, handleSubmit, refreshList} from './actions.js'\n\n    class App extends Component {\n      constructor(props) {\n        super(props);\n        this.state = {\n          modal: false,\n          viewCompleted: false,\n          activeTab: \"1\",\n          context: \"Feature\",\n          activeItem: {},\n          requestList: [],\n          clientList: [],\n          productList: []\n        };\n      }\n\n      componentDidMount = async () => {\n        let result = await refreshList();\n        console.log(result)\n        this.setState({requestList: result[0]&&result[0].data?result[0].data:[],\n        clientList: result[1]&&result[1].data?result[1].data:[],\n        productList: result[2]&&result[2].data?result[2].data:[]})\n      }\n\n      toggle = () => {\n        this.setState({ modal: !this.state.modal });\n      };\n\n      handleToggle = tab => {\n        if(this.state.activeTab !== tab){\n          this.setState({activeTab: tab})\n          this.setState({context: tab==='1' ? \"Feature\" : tab ==='2' ? \"Client\" : \"Product Area\"})\n        }\n      }\n\n      createItem = () => {\n        if(this.state.activeTab ==='1'){\n          const item = {\n            title: \"\",\n            description: \"\",\n            client: \"\",\n            client_priority: \"\",\n            target_date: \"\",\n            product_area: \"\"\n           };\n          this.setState({ activeItem: item, modal: !this.state.modal });\n        }else  {\n            const item = { name: \"\" };\n            this.setState({ activeItem: item, modal: !this.state.modal });\n        }\n      };\n\n      editItem = item => {\n        this.setState({ activeItem: item, modal: !this.state.modal });\n      };\n\n      submitHere = async item => {\n        await handleSubmit(item, this.state.activeTab);\n        let result = await refreshList();\n        this.setState({requestList: result[0]&&result[0].data?result[0].data:[],\n        clientList: result[1]&&result[1].data?result[1].data:[],\n        productList: result[2]&&result[2].data?result[2].data:[]}, ()=>{\n        this.setState({modal: false})\n        })\n      }\n\n      deleteHere = async item => {\n        await handleDelete(item, this.state.activeTab)\n        let result = await refreshList()\n        this.setState({requestList: result[0]&&result[0].data?result[0].data:[],\n        clientList: result[1]&&result[1].data?result[1].data:[],\n        productList: result[2]&&result[2].data?result[2].data:[]})\n      }\n\n      renderItems = (tab, itemList) => {\n        return itemList.map(item => {\n          let content\n          if(tab==='1'){\n            content = (\n                  <tr>\n                    <th scope=\"row\">{item.id}</th>\n                    <td>{item.title}</td>\n                    <td>{item.client}</td>\n                    <td>{item.client_priority}</td>\n                    <td>{item.target_date}</td>\n                    <td>{item.product_area}</td>\n                  </tr>\n              )\n          }else{\n            content = (\n              <div>\n              <span>\n              {item.name}\n              </span>\n\n              </div>)\n          }\n\n          return (\n            <span\n              key={item.id}\n              className=\"list-group-item d-flex justify-content-between align-items-center\"\n            >\n             {content}\n              <span>\n                <button\n                  onClick={() => this.editItem(item)}\n                  className=\"btn btn-secondary mr-2\"\n                >\n                  Edit\n                </button>\n                <button\n                  onClick={() => this.deleteHere(item)}\n                  className=\"btn btn-danger\"\n                >\n                  Delete\n                </button>\n              </span>\n            </span>\n          )\n        });\n      };\n\n      render() {\n        let header = (\n              <tr>\n                <th>Feature</th>\n                <th>Client</th>\n                <th>Client Priority</th>\n                <th>Taget Date</th>\n                <th>Product Area</th>\n              </tr>\n        )\n        return (\n          <main className=\"content\">\n            <h1 className=\"text-white text-uppercase text-center my-4\">Request a Feature</h1>\n            <Nav tabs>\n             <NavItem>\n               <NavLink\n                 className={classnames({ active: this.state.activeTab === \"1\" })}\n                 onClick={() => { this.handleToggle('1'); }}\n               >\n                 Feature Requests\n               </NavLink>\n             </NavItem>\n             <NavItem>\n               <NavLink\n                 className={classnames({ active: this.state.activeTab === '2' })}\n                 onClick={() => { this.handleToggle('2'); }}\n               >\n                 Clients\n               </NavLink>\n             </NavItem>\n             <NavItem>\n               <NavLink\n                 className={classnames({ active: this.state.activeTab === '3' })}\n                 onClick={() => { this.handleToggle('3'); }}\n               >\n               Product Area\n               </NavLink>\n             </NavItem>\n           </Nav>\n\n          {this.state.activeTab === \"1\" ? (\n            <div className=\"row margin-Top\">\n              <div className=\"col-md-10 col-sm-10 mx-auto p-0\">\n                <div className=\"card p-3\">\n                  <div className=\"\">\n                    <button onClick={this.createItem} className=\"btn btn-primary\">\n                      Add {this.state.context}\n                    </button>\n                  </div>\n                  <br/>\n                  <ul className=\"list-group list-group-flush\">\n                    <Table hover>\n                      <thead>\n                        {header}\n                      </thead>\n                      <tbody>\n                      {this.state.requestList && this.state.requestList.length ?\n                        this.state.requestList.map((item,i)=>{\n                          return (\n                          <tr>\n                            <td>{item.title}</td>\n                            <td>{item.client_name}</td>\n                            <td>{item.client_priority}</td>\n                            <td>{item.target_date}</td>\n                            <td>{item.product_name}</td>\n                            <span>\n                              <button\n                                onClick={() => this.editItem(item)}\n                                className=\"btn btn-secondary mr-2\"\n                              >\n                                Edit\n                              </button>\n                              <button\n                                onClick={() => this.deleteHere(item)}\n                                className=\"btn btn-danger\"\n                              >\n                                Delete\n                              </button>\n                            </span>\n                          </tr>\n                        )\n                      }) : \"No Products\" }\n                      </tbody>\n                    </Table>\n\n                  </ul>\n                </div>\n              </div>\n              {this.state.modal ? (\n                <FeatureModal\n                  clientList={this.state.clientList}\n                  productList={this.state.productList}\n                  activeItem={this.state.activeItem}\n                  toggle={this.toggle}\n                  onSave={this.submitHere}\n                />\n              ) : null}\n\n          </div>\n\n        ):\n        <div>\n        {this.state.activeTab === \"2\" ? (\n          <div className=\"row margin-Top\">\n            <div className=\"col-md-6 col-sm-10 mx-auto p-0\">\n              <div className=\"card p-3\">\n                <div className=\"\">\n                  <button onClick={this.createItem} className=\"btn btn-primary\">\n                    Add {this.state.context}\n                  </button>\n                </div>\n                <br/>\n                <ul className=\"list-group list-group-flush\">\n                  {this.renderItems(this.state.activeTab, this.state.clientList)}\n                </ul>\n              </div>\n            </div>\n            {this.state.modal ? (\n              <ClientModal\n                activeItem={this.state.activeItem}\n                toggle={this.toggle}\n                onSave={this.submitHere}\n              />\n            ) : null}\n\n        </div>\n\n      ):\n      <div>\n      {this.state.activeTab === \"3\" ? (\n        <div className=\"row margin-Top\">\n          <div className=\"col-md-6 col-sm-10 mx-auto p-0\">\n            <div className=\"card p-3\">\n              <div className=\"\">\n                <button onClick={this.createItem} className=\"btn btn-primary\">\n                  Add {this.state.context}\n                </button>\n              </div>\n              <br/>\n              <ul className=\"list-group list-group-flush\">\n                {this.renderItems(this.state.activeTab, this.state.productList)}\n              </ul>\n            </div>\n          </div>\n          {this.state.modal ? (\n            <ProductModal\n              activeItem={this.state.activeItem}\n              toggle={this.toggle}\n              onSave={this.submitHere}\n            />\n          ) : null}\n\n      </div>\n\n    ): null\n  }\n\n  </div>\n}\n\n</div>\n}\n\n\n  </main>\n        );\n      }\n    }\n    export default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App/>,document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}